services:
  # MongoDB
  mongo:
    image: mongo:7.0
    container_name: mongo_consumer
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - etl-network

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_consumer
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - etl-network

  # PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres_consumer
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - etl-network

  # Redis
  redis:
    image: redis:latest
    container_name: redis_consumer
    ports:
      - "6380:6379"
    networks:
      - etl-network

  # ETL Consumer
  etl_consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: etl_consumer
    environment:
      IN_DOCKER: "1"
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID}
      MONGO_HOST: mongo_consumer
      MONGO_PORT: "27017"
      MONGODB_URL: mongodb://mongo_consumer:27017/
      MONGODB_DB_NAME: ${MONGODB_DB_NAME}
      MONGO_COLLECTION: ${MONGO_COLLECTION}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      REDIS_HOST: redis_consumer
      REDIS_PORT: "6379"
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres_consumer
      POSTGRES_PORT: "5432"
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - etl-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Esperando servicios...' &&
        sleep 30 &&
        python -m kafka_consumer.consumer
      "

volumes:
  mongo_data:
  mysql_data:
  postgres_data:

networks:
  etl-network:
    name: etl-network
    external: false